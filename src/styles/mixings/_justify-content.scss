/**
 * @description: define class in responsive
 * @mixing: call-justify-content
 */
@mixin call-justify-content($type: false) {
  @if($type == false) {
    @each $val in start, center, end, between, around, stretch {
      @include class-justify-content(#{$justify-content-class}_#{$val}, $val);
    }
  } @else {
    @each $val in start, center, end, between, around, stretch {
      @include class-justify-content(#{$justify-content-class}_#{$val}-#{$type}, $val);
    }
  }
}

/**
 * @description: add default attr
 * @mixing: attr-justify-content
 */
@mixin attr-justify-content {
	@include call-justify-content();
}

/**
 * @description: Definition of class
 * @mixing: class-justify-content
 */
@mixin class-justify-content($class, $type) {
	.#{$class} {
		@include make-justify-content($type)
	}
}

/**
 * @description: Define type.
 * @mixing: make-justify-content
 */
@mixin make-justify-content($type) {
  @if ($type == 'start') {
    justify-content: flex-#{$type};
  } @else if ($type == 'end') {
    justify-content: flex-#{$type};
  } @else if ($type == 'between') {
    justify-content: space-#{$type};
  } @else if ($type == 'around') {
    justify-content: space-#{$type};
  } @else {
    justify-content: $type;
  }
}
